Για αυτήν την άσκηση αρχικά πραγματοποίησα έναν έλενχο για να βεβαιωθώ πως η λύση δεν βρήσκεται στην αρχική θέση. Έπητα έκανα unpack την μεταβλητή state σε 2 μεταβλητές οι οποίες ορίζουν την θέση του pacman και της γωνιές που έχει επισκευθεί. Στη συνέχεια με μία επανάλυψη while έκανα iterate τιε γωνίες που δεν εχει επισκευθεί ακόμα και αξιοποιόνας τη συνάρτηση manhattanDistance που βρήσκετε στο αρχείο util.py υπολόγησα την απόσταση manhattan απο τον pacman στη κάθε γωνία αποθκέβοντας το αποτέλεσμα σε μια μεταβλητη με αποστάσεις και αφαιρόντας την γωνία απο τις unvisted corners. Η συνάρτηση επεκτήνει 1753 κόμβους. Η συνάρτηση δεν είναι αποδεκτή  η συνάρτηση διότη στο στόχο target δέν έχουμε 0 που σημαίνει πως δεν τηρούνται οι πρότασεις 0<=h(x)<=h*(x) και h(x)<=h(N,P)+h(P) όπου η ευρετική συνάρτηση έχει μικρότερο κόστος απο το πραγματικό αλλα και μεγαλήτερο απο το 0.



Για αυτήν την άσκηση αρχικά πραγματοποίησα έναν έλενχο για να βεβαιωθώ πως η λύση δεν βρήσκεται στην αρχική θέση. Έπητα με μία επανάληψη for η οπία κάνει iterate όλα τα φαγητά της πίστας και την βοήθεια μιας προ-υλοποιημένης συνάρτησης mazeDistance υπολόγησα τις αποστάσεις του pacman απο την παρόντα θέση του μέχρι τα φαγητά και τα αποθήκευσα σε μία λίστα distances. Τέλος επιστρέφω τον μέγηστο αριθμό της λίστας το οποιό είναι το ποιο μακρινό φαγητο του λαβυρίνθου. Η συνάρτηση επεκτήνει 4137 κόμβους. Η συνάρτηση είναι αποδεκτή διότη ισχεί η πρόταση 0<=h(x)<=h*(x) όπου η ευρετική συνάρτηση έχει μικρότερο κόστος απο το πραγματικό αλλα και μεγαλήτερο απο το 0. Επιπλέων η συνάρτηση είναι συνεπής διότη ισχεί η πρόταση h(x)<=h(N,P)+h(P) που σημαίνει πως το συνολικό ευριστικό κόστος απο την αρχική θέση είναι μεγαλήτερο απο το ευριστικό κόστος των παιδιών της.